name: Frontend CI/CD

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Select environment'
        required: true
        type: choice
        options:
          - dev
          - prod

permissions:
  id-token: write
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_ECR_ROLE_TO_ASSUME }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR Public
        uses: aws-actions/amazon-ecr-login@v1
        with:
          registry-type: public

      - name: Get Short SHA
        run: echo "SHORT_SHA=$(echo $GITHUB_SHA | cut -c1-8)" >> $GITHUB_ENV

      - name: Set Backend URL
        run: |
          if [ "${{ inputs.environment }}" == "dev" ]; then
            echo "BACKEND_URL=https://dev.myapp.local" >> $GITHUB_ENV
          else
            echo "BACKEND_URL=https://myapp.local" >> $GITHUB_ENV
          fi

      - name: Build and Push Docker Image
        env:
          AWS_ECR_REGISTRY: ${{ secrets.FRONTEND_ECR_REGISTRY }}
          AWS_ECR_REGISTRY_ALIAS: ${{ secrets.FRONTEND_AWS_REGISTRY_ALIAS }}
          AWS_ECR_REPOSITORY: frontend
          IMAGE_TAG: latest
        run: |
          echo "Building Docker image with tag: $AWS_ECR_REGISTRY/$AWS_ECR_REGISTRY_ALIAS/$AWS_ECR_REPOSITORY:$IMAGE_TAG"
          
          # Build the Docker image
          docker build --build-arg VITE_API_URL=$BACKEND_URL -t $AWS_ECR_REGISTRY/$AWS_ECR_REGISTRY_ALIAS/$AWS_ECR_REPOSITORY:$IMAGE_TAG .

          # Push the Docker image to ECR
          docker push $AWS_ECR_REGISTRY/$AWS_ECR_REGISTRY_ALIAS/$AWS_ECR_REPOSITORY:$IMAGE_TAG

      - name: Update Image Tag in Values File
        run: |
          sed -i "s/tag: .*/tag: latest/" custom-charts/frontend/values-${{ github.event.inputs.environment }}.yaml
          echo "Updated image tag to latest in values-${{ github.event.inputs.environment }}.yaml"

      - name: Commit and Push Changes
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git add custom-charts/frontend/values-${{ github.event.inputs.environment }}.yaml
          git commit -m "Update image tag to latest in values-${{ github.event.inputs.environment }}.yaml" || echo "No changes to commit"
          git push
