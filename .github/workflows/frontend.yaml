name: Build and Push Frontend Docker Image

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Select the target environment'
        required: true
        type: choice
        options:
          - dev
          - prod

permissions:
  id-token: write
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_ECR_ROLE_TO_ASSUME }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR Public
        uses: aws-actions/amazon-ecr-login@v1
        with:
          registry-type: public

      - name: Get Short SHA
        id: get_short_sha
        run: echo "SHORT_SHA=$(echo $GITHUB_SHA | cut -c1-8)" >> $GITHUB_ENV

      - name: Set Backend URL
        run: |
          if [ "${{ inputs.environment }}" == "dev" ]; then
            echo "BACKEND_URL=https://dev.myapp.local" >> $GITHUB_ENV
          else
            echo "BACKEND_URL=https://myapp.local" >> $GITHUB_ENV
          fi

      - name: Update image tag in values files
        run: |
          if [ "${{ inputs.environment }}" == "dev" ]; then
            sed -i 's/tag: latest/tag: dev-${{ env.SHORT_SHA }}/' values.dev.yaml
          else
            sed -i 's/tag: latest/tag: prod-${{ env.SHORT_SHA }}/' values.prod.yaml
          fi

      - name: Build and Push Docker Image
        env:
          AWS_ECR_REGISTRY: ${{ secrets.FRONTEND_ECR_REGISTRY }}  # Ваш секрет для реєстру
          AWS_ECR_REGISTRY_ALIAS: ${{ secrets.FRONTEND_AWS_REGISTRY_ALIAS }}  # Ваш секрет для псевдоніму реєстру
          AWS_ECR_REPOSITORY: frontend  # Назва репозиторію
          FRONTEND_REPOSITORY: https://github.com/fastapi/full-stack-fastapi-template.git#0.7.1:frontend
          IMAGE_TAG: ${{ inputs.environment }}-${{ env.SHORT_SHA }}  # Тег для образу
        run: |
          echo "Building Docker image with tag: $AWS_ECR_REGISTRY/$AWS_ECR_REGISTRY_ALIAS/$AWS_ECR_REPOSITORY:$IMAGE_TAG"
          # Build the Docker image
          docker build --build-arg VITE_API_URL=$BACKEND_URL -t "$AWS_ECR_REGISTRY/$AWS_ECR_REGISTRY_ALIAS/$AWS_ECR_REPOSITORY:$IMAGE_TAG" "$FRONTEND_REPOSITORY"
          # Push the Docker image to ECR
          docker push "$AWS_ECR_REGISTRY/$AWS_ECR_REGISTRY_ALIAS/$AWS_ECR_REPOSITORY:$IMAGE_TAG"
