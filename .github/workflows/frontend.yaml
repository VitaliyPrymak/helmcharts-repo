name: Frontend Deployment

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Target environment'
        required: true
        type: choice
        options:
          - dev
          - prod

permissions:
  id-token: write
  contents: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ECR_ROLE_TO_ASSUME }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR Public
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        with:
          registry-type: public

      - name: Get Short SHA
        run: echo "SHORT_SHA=$(echo $GITHUB_SHA | cut -c1-8)" >> $GITHUB_ENV

      - name: Set Backend URL
        run: |
          if [ "${{ inputs.environment }}" == "dev" ]; then
            echo "BACKEND_URL=https://dev.myapp.local" >> $GITHUB_ENV
          else
            echo "BACKEND_URL=https://myapp.local" >> $GITHUB_ENV
          fi

      - name: Debug - Check Files
        run: ls -R

      - name: Build, Tag, and Push Docker Image
        env:
          AWS_ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          AWS_ECR_REGISTRY_ALIAS: ${{ secrets.AWS_ECR_REGISTRY_ALIAS }}
          AWS_ECR_REPOSITORY: frontend
          IMAGE_TAG: ${{ env.SHORT_SHA }}
        run: |
          docker build --build-arg VITE_API_URL=$BACKEND_URL -t $AWS_ECR_REGISTRY/$AWS_ECR_REGISTRY_ALIAS/$AWS_ECR_REPOSITORY:$IMAGE_TAG -f frontend/Dockerfile frontend/
          docker push $AWS_ECR_REGISTRY/$AWS_ECR_REGISTRY_ALIAS/$AWS_ECR_REPOSITORY:$IMAGE_TAG

          if [ "${{ inputs.environment }}" == "prod" ]; then
            docker tag $AWS_ECR_REGISTRY/$AWS_ECR_REGISTRY_ALIAS/$AWS_ECR_REPOSITORY:$IMAGE_TAG $AWS_ECR_REGISTRY/$AWS_ECR_REGISTRY_ALIAS/$AWS_ECR_REPOSITORY:latest
            docker push $AWS_ECR_REGISTRY/$AWS_ECR_REGISTRY_ALIAS/$AWS_ECR_REPOSITORY:latest
          fi

      - name: Update Helm Chart Image Tag
        uses: fjogeleit/yaml-update-action@v0.13.2
        with:
          valueFile: custom-charts/frontend/values-${{ github.event.inputs.environment }}.yaml
          propertyPath: deployment.image.tag
          value: ${{ env.SHORT_SHA }}
          branch: main
          message: "Update Image Version to ${{ env.SHORT_SHA }}"
