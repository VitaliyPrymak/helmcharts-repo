apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ printf "%s-%s" .Release.Name .Values.application }}
  labels:
    app: {{ printf "%s-%s" .Release.Name .Values.application }}
spec:
  replicas: {{ .Values.deployment.replicas }}
  selector:
    matchLabels:
      app: {{ printf "%s-%s" .Release.Name .Values.application }}
  template:
    metadata:
      labels:
        app: {{ printf "%s-%s" .Release.Name .Values.application }}
    spec:
      initContainers:
        - name: wait-for-postgres
          image: cgr.dev/chainguard/wait-for-it
          args:
            - "$(POSTGRES_SERVER):$(POSTGRES_PORT)"
          env:
            - name: POSTGRES_SERVER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.application }}-secret
                  key: POSTGRES_SERVER
            - name: POSTGRES_PORT
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.application }}-secret
                  key: POSTGRES_PORT
          envFrom:
            - secretRef:
                name: {{ .Values.application }}-secret

        - name: db-migrations
          image: {{ .Values.deployment.image.repository }}:{{ .Values.deployment.image.tag }}
          command:
            - sh
            - -c
            - "python app/backend_pre_start.py && alembic upgrade head && python app/initial_data.py"
          env:
            - name: POSTGRES_SERVER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.application }}-secret
                  key: POSTGRES_SERVER
            - name: POSTGRES_PORT
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.application }}-secret
                  key: POSTGRES_PORT
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.application }}-secret
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.application }}-secret
                  key: POSTGRES_PASSWORD
          envFrom:
            - secretRef:
                name: {{ .Values.application }}-secret

      containers:
        - name: {{ .Values.application }}
          image: {{ printf "%s:%s" .Values.deployment.image.repository .Values.deployment.image.tag }}
          ports:
            - name: http
              containerPort: {{ .Values.deployment.containerPort }}
          resources:
            requests:
              cpu: {{ .Values.deployment.resources.requests.cpu }}
              memory: {{ .Values.deployment.resources.requests.memory }}
            limits:
              cpu: {{ .Values.deployment.resources.limits.cpu }}
              memory: {{ .Values.deployment.resources.limits.memory }}
          env:
            - name: POSTGRES_SERVER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.application }}-secret
                  key: POSTGRES_SERVER
            - name: POSTGRES_PORT
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.application }}-secret
                  key: POSTGRES_PORT
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.application }}-secret
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.application }}-secret
                  key: POSTGRES_PASSWORD
          envFrom:
            - secretRef:
                name: {{ .Values.application }}-secret
